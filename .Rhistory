facet_grid(pop.size~rnott, scales = "free_y") +
labs(x = "Shifted Time", y = "Delta Diversity") +
theme(axis.text.x  = element_text(angle=45, vjust=0.5, size=12)) +
theme(strip.background = element_blank())  +
geom_vline(xintercept = 0, color = "orange", lty = 2, size = 1) -> delta.avg.entropy.plot
delta.avg.entropy %>%
filter(rnott %in% desired.rnotts) %>%
ggplot(aes(x = shifted.time, y = avg.d.entropy)) +
geom_line() + geom_ribbon(aes(ymin = (avg.d.entropy - sd.d.entropy), ymax = (avg.d.entropy + sd.d.entropy)),
alpha = .5, fill="steelblue2", color="steelblue2") +
facet_grid(pop.size~rnott, scales = "free_y") +
labs(x = "Shifted Time", y = "Delta Entropy") +
theme(axis.text.x  = element_text(angle=45, vjust=0.5, size=12)) +
theme(strip.background = element_blank())  +
geom_vline(xintercept = 0, color = "orange", lty = 2, size = 1) -> delta.avg.entropy.plot
delta.avg.entropy.plot
desired.rnotts
desired.rnotts <- c(0.9, 1.1, seq(2,4))
delta.avg.entropy %>%
filter(rnott %in% desired.rnotts) %>%
ggplot(aes(x = shifted.time, y = avg.d.entropy)) +
geom_line() + geom_ribbon(aes(ymin = (avg.d.entropy - sd.d.entropy), ymax = (avg.d.entropy + sd.d.entropy)),
alpha = .5, fill="steelblue2", color="steelblue2") +
facet_grid(pop.size~rnott, scales = "free_y") +
labs(x = "Shifted Time", y = "Delta Entropy") +
theme(axis.text.x  = element_text(angle=45, vjust=0.5, size=12)) +
theme(strip.background = element_blank())  +
geom_vline(xintercept = 0, color = "orange", lty = 2, size = 1)
delta.avg.entropy %>%
filter(rnott %in% desired.rnotts) %>%
ggplot(aes(x = shifted.time, y = avg.d.entropy)) +
geom_line() + geom_ribbon(aes(ymin = (avg.d.entropy - sd.d.entropy), ymax = (avg.d.entropy + sd.d.entropy)),
alpha = .5, fill="steelblue2", color="steelblue2") +
facet_grid(pop.size~rnott, scales = "free_y") +
labs(x = "Shifted Time", y = "Delta Entropy") +
theme(axis.text.x  = element_text(angle=45, vjust=0.5, size=12)) +
theme(strip.background = element_blank())  +
geom_vline(xintercept = 0, color = "orange", lty = 2, size = 1) -> delta.avg.entropy.plot.long
delta.avg.diversity %>%
filter(rnott %in% desired.rnotts) %>%
ggplot(aes(x = shifted.time, y = avg.d.diversity)) +
geom_line() + geom_ribbon(aes(ymin = (avg.d.diversity - sd.d.diversity), ymax = (avg.d.diversity + sd.d.diversity)),
alpha = .5, fill="steelblue2", color="steelblue2") +
facet_grid(pop.size~rnott, scales = "free_y") +
labs(x = "Shifted Time", y = "Delta diversity") +
theme(axis.text.x  = element_text(angle=45, vjust=0.5, size=12)) +
theme(strip.background = element_blank())  +
geom_vline(xintercept = 0, color = "orange", lty = 2, size = 1)
delta.avg.diversity %>%
filter(rnott %in% desired.rnotts) %>%
ggplot(aes(x = shifted.time, y = avg.d.diversity)) +
geom_line() + geom_ribbon(aes(ymin = (avg.d.diversity - sd.d.diversity), ymax = (avg.d.diversity + sd.d.diversity)),
alpha = .5, fill="steelblue2", color="steelblue2") +
facet_grid(pop.size~rnott, scales = "free_y") +
labs(x = "Shifted Time", y = "Delta diversity") +
theme(axis.text.x  = element_text(angle=45, vjust=0.5, size=12)) +
theme(strip.background = element_blank())  +
geom_vline(xintercept = 0, color = "orange", lty = 2, size = 1) -> delta.avg.diversity.plot.long
delta.avg.cir.strains %>%
filter(rnott %in% desired.rnotts) %>%
ggplot(aes(x = shifted.time, y = avg.d.cir.strains)) +
geom_line() + geom_ribbon(aes(ymin = (avg.d.cir.strains - sd.d.cir.strains), ymax = (avg.d.cir.strains + sd.d.cir.strains)),
alpha = .5, fill="steelblue2", color="steelblue2") +
facet_grid(pop.size~rnott, scales = "free_y") +
labs(x = "Shifted Time", y = "Delta Circulating Strains") +
theme(axis.text.x  = element_text(angle=45, vjust=0.5, size=12)) +
theme(strip.background = element_blank())  +
geom_vline(xintercept = 0, color = "orange", lty = 2, size = 1) -> delta.avg.cir.strains.plot.long
delta.avg.cir.strains.plot.long
save_plot(filename = paste0(fig_path, "delta.avg.cir.pdf"), base_height = 8, base_aspect_ratio = 1.5)
save_plot(filename = paste0(fig_path, "delta.avg.cir.pdf"), delta.avg.cir.strains.plot
base_height = 8, base_aspect_ratio = 1.5)
save_plot(filename = paste0(fig_path, "delta.avg.cir.pdf"), delta.avg.cir.strains.plot,
base_height = 8, base_aspect_ratio = 1.5)
save_plot(filename = paste0(fig_path, "delta.avg.cir.long.pdf"), delta.avg.cir.strains.plot.long,
base_height = 8, base_aspect_ratio = 1.5)
save_plot(filename = paste0(fig_path, "delta.avg.cum.pdf"), delta.avg.cum.strains.plot,
base_height = 8, base_aspect_ratio = 1.5)
save_plot(filename = paste0(fig_path, "delta.avg.diversity.pdf"), delta.avg.diversity.plot,
base_height = 8, base_aspect_ratio = 1.5)
save_plot(filename = paste0(fig_path, "delta.avg.diversity.long.pdf"), delta.avg.diversity.plot.long,
base_height = 8, base_aspect_ratio = 1.5)
save_plot(filename = paste0(fig_path, "delta.avg.entropy.long.pdf"), delta.avg.entropy.plot.long,
base_height = 8, base_aspect_ratio = 1.5)
save_plot(filename = paste0(fig_path, "delta.avg.entropy.pdf"), delta.avg.entropy.plot,
base_height = 8, base_aspect_ratio = 1.5)
max.infect.metrics.master <-  adply(.data = data.files, .margins = 1, .id=NULL, .expand = F,function(x) {
load(as.character(x$file.list))
trial.params <- get_params(x)
epidemic.index <- x$epidemic.trials[[1]]$epidemic.trials
time.records.a <- align_time_series_all(time.records[epidemic.index])
metrics <- metrics_at_max_infect(time.records = time.records.a)
metrics <-  cbind(rep(trial.params, nrow(metrics)), metrics)
return(metrics)
})
plot.metric.at.maxinfect(max.infect.metrics.master, desired.rnotts = r0_seq, desired.metric = "diversity")
sapply(c('analyze_saved_sims.R', 'plotting_functions.R'), source)
plot.metric.at.maxinfect(max.infect.metrics.master, desired.rnotts = r0_seq, desired.metric = "diversity")
diversity.at.max <- plot.metric.at.maxinfect(max.infect.metrics.master,
desired.rnotts = r0_seq, desired.metric = "diversity")
save_plot(filename = paste0(fig_path, 'diversity.at.max.pdf'), diversity.at.max, base_height = 8)
save_plot(filename = paste0(fig_path, 'diversity.at.max.pdf'), diversity.at.max, base_height = 8, base_aspect_ratio = 1.5)
entropy.at.max <- plot.metric.at.maxinfect(max.infect.metrics.master,
desired.rnotts = r0_seq, desired.metric = "entropy")
save_plot(filename = paste0(fig_path, 'entropy.at.max.pdf'), entropy.at.max, base_height = 8, base_aspect_ratio = 1.5)
file.list <- get_vec_of_files(dir_path = data_path, type = "strain", r0_seq, N)
combos <- sort(apply(expand.grid(r0_seq, N), 1, paste, collapse = "_", sep = ""))
data.files <- data.frame(cbind(combos, file.list))
long.strains <- function(index, strain.records) {
trial.strain.record <- strain.records[[index]]
trial.strain.record$time <- seq(1:nrow(trial.strain.record))
strain.record.long <- gather(trial.strain.record, strain.name, frequency, -iter, -time)
strain.record.long[is.na(strain.record.long)] <- 0
return(strain.record.long)
}
long.strains
data.files$epidemic.trials <- epidemic.trials
data.files
View(data.files)
load(data.files$file.list[12])
load(data.files$file.list[12])
data.files[12]
data.files[12,]
load(data.files$file.list[12])
data.files$file.list[12]
desired.strain <- data.files$file.list[12]
load(desired.strain)
load("~/Documents/projects/viral_evolution/viral_evolution_repo/data/strain/strain_rnott1.5_N10000.RData")
sample <- sample(x = seq(1:100), size = 20)
long.strains.master <- adply(.data = sample, .margins = 1, function(x) {
long.strains.m <- long.strains(x, strain.records)
return(long.strains.m)
})
head(long.strains.master)
head(long.strains.master)
rnott.1.5.pop.10000 <- ggplot(data = long.strains.master, aes(x = time, y = frequency, fill = strain.name)) +
facet_wrap(~ X1, scales = "free") +
geom_area(color = 'black', size = .2, alpha = .4) + guides(fill = FALSE) +
geom_vline(data = time.max.samples.long, aes(xintercept = jitter(value, .15), color = type), size = 1.25, alpha = .85) +
scale_color_manual(values = c("darkorange1", "mediumblue", "purple", "black")) +
theme(strip.background = element_blank(),  strip.text.x = element_blank()) +
labs(x = "Time", y = "Frequency")
rnott.1.5.pop.10000 <- ggplot(data = long.strains.master, aes(x = time, y = frequency, fill = strain.name)) +
facet_wrap(~ X1, scales = "free") +
geom_area(color = 'black', size = .2, alpha = .4) + guides(fill = FALSE) +
# geom_vline(data = time.max.samples.long, aes(xintercept = jitter(value, .15), color = type), size = 1.25, alpha = .85) +
scale_color_manual(values = c("darkorange1", "mediumblue", "purple", "black")) +
theme(strip.background = element_blank(),  strip.text.x = element_blank()) +
labs(x = "Time", y = "Frequency")
rnott.1.5.pop.10000
if(grepl('laurencastro', Sys.info()['login'])) data_path <- "~/Documents/projects/viral_evolution/data/"
file.list <- get_vec_of_files(dir_path = data_path, type = "strain", r0_seq, N)
combos <- sort(apply(expand.grid(r0_seq, N), 1, paste, collapse = "_", sep = ""))
data.files.strain <- data.frame(cbind(combos, file.list))
file.list <- get_vec_of_files(dir_path = data_path, type = "trial", r0_seq, N)
combos <- sort(apply(expand.grid(r0_seq, N), 1, paste, collapse = "_", sep = ""))
data.files.trial <- data.frame(cbind(combos, file.list))
epidemic.trials <- set_epidemic_criteria(time.records, threshold.prev = .025, threshold.prop = .25)
set_epidemic_criteria
set_epidemic_criteria <- function(data.files, threshold.prev, threshold.prop) {
epidemic.trials <- alply(.data = data.files, .margins = 1, function(x) {
load(as.character(x$file.list))
trial.params <- get_params(x)
# Set thresholds here
epidemic.trials <- get_epidemic_index(time.records, trial.N = trial.params$pop.size,
threshold.prev = threshold.prev, threshold.prop = threshold.prop)
if (length(epidemic.trials) == 0) epidemic.trials <- 0
epidemic.trials <- cbind(trial.params, epidemic.trials)
return(epidemic.trials)
})
return(epidemic.trials)
}
epidemic.trials <- set_epidemic_criteria(data.files.trial, threshold.prev = .025, threshold.prop = .25)
data.files$epidemic.trials <- epidemic.trials
View(data.files)
desired.rnotss <- c(0.9, 1.5, 2.5)
sample <- sample(1:100, 5)
time.max.master <- adply(.data = data.files, .margins = 1, .id=NULL, .expand = F, function(x) {
load(as.character(x$file.list))
trial.params <- get_params(x)
epidemic.index <- x$epidemic.trials[[1]]$epidemic.trials
max.infect <- all_time_max_infected(time.records[epidemic.index])
max.diversity <- all_time_max_diversity(time.records[epidemic.index])
max.entropy <- all_time_max_entropy(time.records[epidemic.index])
max.times.trial <- cbind(trial.params,max.infect, max.diversity, max.entropy)
return(max.times.trial)
})
data.files
time.max.master <- adply(.data = data.files, .margins = 1, .id=NULL, .expand = F, function(x) {
load(as.character(x$file.list))
browser()
trial.params <- get_params(x)
epidemic.index <- x$epidemic.trials[[1]]$epidemic.trials
max.infect <- all_time_max_infected(time.records[epidemic.index])
max.diversity <- all_time_max_diversity(time.records[epidemic.index])
max.entropy <- all_time_max_entropy(time.records[epidemic.index])
max.times.trial <- cbind(trial.params,max.infect, max.diversity, max.entropy)
return(max.times.trial)
})
time.max.master <- adply(.data = data.files.trial, .margins = 1, .id=NULL, .expand = F, function(x) {
load(as.character(x$file.list))
trial.params <- get_params(x)
epidemic.index <- x$epidemic.trials[[1]]$epidemic.trials
max.infect <- all_time_max_infected(time.records[epidemic.index])
max.diversity <- all_time_max_diversity(time.records[epidemic.index])
max.entropy <- all_time_max_entropy(time.records[epidemic.index])
max.times.trial <- cbind(trial.params,max.infect, max.diversity, max.entropy)
return(max.times.trial)
})
time.max.master <- adply(.data = data.files.trial, .margins = 1, .id=NULL, .expand = F, function(x) {
load(as.character(x$file.list))
trial.params <- get_params(x)
epidemic.index <- x$epidemic.trials[[1]]$epidemic.trials
max.infect <- all_time_max_infected(time.records[epidemic.index])
max.diversity <- all_time_max_diversity(time.records[epidemic.index])
max.entropy <- all_time_max_entropy(time.records[epidemic.index])
max.times.trial <- cbind(trial.params,max.infect, max.diversity, max.entropy)
return(max.times.trial)
})
time.max.master <- adply(.data = data.files.trial, .margins = 1, .id=NULL, .expand = F, function(x) {
load(as.character(x$file.list))
trial.params <- get_params(x)
browser()
epidemic.index <- x$epidemic.trials[[1]]$epidemic.trials
max.infect <- all_time_max_infected(time.records[epidemic.index])
max.diversity <- all_time_max_diversity(time.records[epidemic.index])
max.entropy <- all_time_max_entropy(time.records[epidemic.index])
max.times.trial <- cbind(trial.params,max.infect, max.diversity, max.entropy)
return(max.times.trial)
})
desired.rnotts <- c(0.9, 1.5, 2.5)
file.list <- get_vec_of_files(dir_path = data_path, type = "trial", desired.rnotts, N)
file.list
combos <- sort(apply(expand.grid(r0_seq, N), 1, paste, collapse = "_", sep = ""))
combos <- sort(apply(expand.grid(desired.rnotss, N), 1, paste, collapse = "_", sep = ""))
combos <- sort(apply(expand.grid(desired.rnotts, N), 1, paste, collapse = "_", sep = ""))
combos
data.files.trial <- data.frame(cbind(combos, file.list))
head(data.files.trial)
time.max.master <- adply(.data = data.files.trial, .margins = 1, .id=NULL, .expand = F, function(x) {
load(as.character(x$file.list))
trial.params <- get_params(x)
epidemic.index <- x$epidemic.trials[[1]]$epidemic.trials
max.infect <- all_time_max_infected(time.records[epidemic.index])
max.diversity <- all_time_max_diversity(time.records[epidemic.index])
max.entropy <- all_time_max_entropy(time.records[epidemic.index])
max.times.trial <- cbind(trial.params,max.infect, max.diversity, max.entropy)
return(max.times.trial)
})
time.max.master <- adply(.data = data.files.trial, .margins = 1, .id=NULL, .expand = F, function(x) {
load(as.character(x$file.list))
trial.params <- get_params(x)
epidemic.index <- x$epidemic.trials[[1]]$epidemic.trials
max.infect <- all_time_max_infected(time.records[epidemic.index])
max.diversity <- all_time_max_diversity(time.records[epidemic.index])
max.entropy <- all_time_max_entropy(time.records[epidemic.index])
max.times.trial <- cbind(trial.params,max.infect, max.diversity, max.entropy)
browser()
return(max.times.trial)
})
time.max.master <- adply(.data = data.files.trial, .margins = 1, .id=NULL, .expand = F, function(x) {
load(as.character(x$file.list))
trial.params <- get_params(x)
epidemic.index <- x$epidemic.trials[[1]]$epidemic.trials
max.infect <- all_time_max_infected(time.records[epidemic.index])
max.diversity <- all_time_max_diversity(time.records[epidemic.index])
max.entropy <- all_time_max_entropy(time.records[epidemic.index])
browser()
max.times.trial <- cbind(trial.params,max.infect, max.diversity, max.entropy)
return(max.times.trial)
})
epidemic.trials <- set_epidemic_criteria(data.files.trial, threshold.prev = .025, threshold.prop = .25)
data.files.trial$epidemic.trials <- epidemic.trials
View(data.files.trial)
time.max.master <- adply(.data = data.files.trial, .margins = 1, .id=NULL, .expand = F, function(x) {
load(as.character(x$file.list))
trial.params <- get_params(x)
browser()
epidemic.index <- x$epidemic.trials[[1]]$epidemic.trials
max.infect <- all_time_max_infected(time.records[epidemic.index])
max.diversity <- all_time_max_diversity(time.records[epidemic.index])
max.entropy <- all_time_max_entropy(time.records[epidemic.index])
max.times.trial <- cbind(trial.params,max.infect, max.diversity, max.entropy)
return(max.times.trial)
})
time.max.master <- adply(.data = data.files.trial, .margins = 1, .id=NULL, .expand = F, function(x) {
load(as.character(x$file.list))
trial.params <- get_params(x)
#epidemic.index <- x$epidemic.trials[[1]]$epidemic.trials
max.infect <- all_time_max_infected(time.records)
max.diversity <- all_time_max_diversity(time.records)
max.entropy <- all_time_max_entropy(time.records)
max.times.trial <- cbind(trial.params,max.infect, max.diversity, max.entropy)
return(max.times.trial)
})
View(time.max.master)
View(time.max.master)
sample
time.max.master <- adply(.data = data.files.trial, .margins = 1, .id=NULL, .expand = F, function(x) {
load(as.character(x$file.list))
trial.params <- get_params(x)
#epidemic.index <- x$epidemic.trials[[1]]$epidemic.trials
max.infect <- all_time_max_infected(time.records)
max.diversity <- all_time_max_diversity(time.records)
max.entropy <- all_time_max_entropy(time.records)
iter <- seq(1:100)
max.times.trial <- cbind(trial.params,iter, max.infect, max.diversity, max.entropy)
return(max.times.trial)
})
View(time.max.master)
data.files.strain
file.list <- get_vec_of_files(dir_path = data_path, type = "strain", desired.rnotts, N)
combos <- sort(apply(expand.grid(desired.rnotts, N), 1, paste, collapse = "_", sep = ""))
data.files.strain <- data.frame(cbind(combos, file.list))
data.files.strain
long.strains.master <- adply(.data = data.files.strain, .margins = 1, function(x) {
load(as.character(x$file.list))
trial.params <- get_params(x)
long.strain.df <- adply(.data = sample, .margins = 1, function(x) {
long.strains.m <- long.strains(x, strain.records)
return(long.strains.m)
})
long.strain.df <- cbind(trial.params, long.strain.df)
return(long.strain.df)
})
head(long.strains.master)
tail(long.strains.master)
long.strains.master <- adply(.data = data.files.strain, .margins = 1,.id = NULL, function(x) {
load(as.character(x$file.list))
trial.params <- get_params(x)
long.strain.df <- adply(.data = sample, .margins = 1, function(x) {
long.strains.m <- long.strains(x, strain.records)
return(long.strains.m)
})
long.strain.df <- cbind(trial.params, long.strain.df)
return(long.strain.df)
})
tail(long.strains.master)
long.strains.master <- adply(.data = data.files.strain, .margins = 1,.id = NULL, .expand = FALSE, function(x) {
load(as.character(x$file.list))
trial.params <- get_params(x)
long.strain.df <- adply(.data = sample, .margins = 1, function(x) {
long.strains.m <- long.strains(x, strain.records)
return(long.strains.m)
})
long.strain.df <- cbind(trial.params, long.strain.df)
return(long.strain.df)
})
long.strains.master
long.strains.master <- adply(.data = data.files.strain, .margins = 1,.id = NULL, .expand = FALSE, function(x) {
load(as.character(x$file.list))
trial.params <- get_params(x)
long.strain.df <- adply(.data = sample, .margins = 1, function(x) {
long.strains.m <- long.strains(x, strain.records)
return(long.strains.m)
})
long.strain.df <- cbind(trial.params, long.strain.df)
return(long.strain.df)
})
head(long.strains.master)
tail(long.strains.master)
head(time.max.master)
time.max.master %>% filter(iter %in% sample) -> time.max.sample
View(time.max.sample)
time.max.master %>% filter(iter %in% sample & pop.size == 1000) -> time.max.sample
View(time.max.sample)
long.strains.master %>% filter(pop.size == 1000) -> long.strains.sample
head(long.strains.sample)
ci.pop.10000 <- ggplot(data = long.strains.sample, aes(x = time, y = frequency, fill = strain.name)) +
facet_wrap(~ X1, scales = "free") +
geom_area(color = 'black', size = .2, alpha = .4) + guides(fill = FALSE) +
# geom_vline(data = time.max.samples.long, aes(xintercept = jitter(value, .15), color = type), size = 1.25, alpha = .85) +
#scale_color_manual(values = c("darkorange1", "mediumblue", "purple", "black")) +
theme(strip.background = element_blank(),  strip.text.x = element_blank()) +
labs(x = "Time", y = "Frequency")
ci.pop.10000
ci.pop.10000 <- ggplot(data = long.strains.sample, aes(x = time, y = frequency, fill = strain.name)) +
facet_wrap(pop.size ~ rnott,  scales = "free") +
geom_area(color = 'black', size = .2, alpha = .4) + guides(fill = FALSE) +
# geom_vline(data = time.max.samples.long, aes(xintercept = jitter(value, .15), color = type), size = 1.25, alpha = .85) +
#scale_color_manual(values = c("darkorange1", "mediumblue", "purple", "black")) +
theme(strip.background = element_blank(),  strip.text.x = element_blank()) +
labs(x = "Time", y = "Frequency")
ci.pop.10000
ci.pop.10000 <- ggplot(data = long.strains.sample, aes(x = time, y = frequency, fill = strain.name)) +
facet_wrap(pop.size ~ rnott,  scales = "free") +
geom_area(color = 'black', size = .2, alpha = .4) + guides(fill = FALSE) +
# geom_vline(data = time.max.samples.long, aes(xintercept = jitter(value, .15), color = type), size = 1.25, alpha = .85) +
scale_color_manual(values = c("darkorange1", "mediumblue", "purple", "black")) +
theme(strip.background = element_blank(),  strip.text.x = element_blank()) +
labs(x = "Time", y = "Frequency")
ci.pop.10000
head(long.strains.sample)
ci.pop.10000 <- ggplot(data = long.strains.sample, aes(x = time, y = frequency, fill = strain.name)) +
facet_wrap(pop.size ~ rnott,  scales = "free") +
geom_area(color = strain.name, size = .2, alpha = .4) + guides(fill = FALSE) +
# geom_vline(data = time.max.samples.long, aes(xintercept = jitter(value, .15), color = type), size = 1.25, alpha = .85) +
scale_color_manual(values = c("darkorange1", "mediumblue", "purple", "black")) +
theme(strip.background = element_blank(),  strip.text.x = element_blank()) +
labs(x = "Time", y = "Frequency")
ci.pop.10000 <- ggplot(data = long.strains.sample, aes(x = time, y = frequency, fill = strain.name)) +
facet_wrap(pop.size ~ rnott,  scales = "free") +
geom_area(color = strain.name, size = .2, alpha = .4) + guides(fill = FALSE) +
# geom_vline(data = time.max.samples.long, aes(xintercept = jitter(value, .15), color = type), size = 1.25, alpha = .85) +
scale_color_manual(values = c("darkorange1", "mediumblue", "purple", "black")) +
theme(strip.background = element_blank(),  strip.text.x = element_blank()) +
labs(x = "Time", y = "Frequency")
ci.pop.10000 <- ggplot(data = long.strains.sample, aes(x = time, y = frequency, fill = strain.name)) +
facet_grid(pop.size ~ rnott,  scales = "free") +
geom_area(color = strain.name, size = .2, alpha = .4) + guides(fill = FALSE) +
# geom_vline(data = time.max.samples.long, aes(xintercept = jitter(value, .15), color = type), size = 1.25, alpha = .85) +
scale_color_manual(values = c("darkorange1", "mediumblue", "purple", "black")) +
theme(strip.background = element_blank(),  strip.text.x = element_blank()) +
labs(x = "Time", y = "Frequency")
ci.pop.10000 <- ggplot(data = long.strains.sample, aes(x = time, y = frequency, fill = strain.name)) +
facet_grid(pop.size ~ rnott, scales = "free") +
geom_area(color = strain.name, size = .2, alpha = .4)
ci.pop.10000 <- ggplot(data = long.strains.sample, aes(x = time, y = frequency, fill = strain.name)) +
facet_grid(X1 ~ rnott, scales = "free") +
geom_area(color = strain.name, size = .2, alpha = .4)
long.strains.sample
ci.pop.10000 <- ggplot2::ggplot(data = long.strains.sample, aes(x = time, y = frequency, fill = strain.name)) +
facet_grid(X1 ~ rnott, scales = "free") +
geom_area(color = strain.name, size = .2, alpha = .4)
ci.pop.10000 <- ggplot2::ggplot(data = long.strains.sample, aes(x = time, y = frequency, fill = strain.name)) +
facet_grid(X1 ~ rnott, scales = "free") +
geom_area(aes(color = strain.name, size = .2, alpha = .4))
ci.pop.10000
ci.pop.10000 <- ggplot2::ggplot(data = long.strains.sample, aes(x = time, y = frequency, fill = strain.name)) +
facet_grid(X1 ~ rnott, scales = "free") +
geom_area(aes(color = strain.name, size = .2, alpha = .4)) + guides(fill = FALSE)
ci.pop.10000
ci.pop.10000 <- ggplot2::ggplot(data = long.strains.sample, aes(x = time, y = frequency, fill = strain.name)) +
facet_grid(X1 ~ rnott, scales = "free") +
geom_area(color = "black", size = .2, alpha = .4)) + guides(fill = FALSE)
ci.pop.10000 <- ggplot2::ggplot(data = long.strains.sample, aes(x = time, y = frequency, fill = strain.name)) +
facet_grid(X1 ~ rnott, scales = "free") +
geom_area(color = "black", size = .2, alpha = .4) + guides(fill = FALSE)
ci.pop.10000
ci.pop.10000 <- ggplot2::ggplot(data = long.strains.sample, aes(x = time, y = frequency, fill = strain.name)) +
facet_grid(rnott ~ iter, scales = "free") +
geom_area(color = "black", size = .2, alpha = .4) + guides(fill = FALSE)
ci.pop.10000
head(time.max.sample)
ci.pop.10000 <- ggplot2::ggplot(data = long.strains.sample, aes(x = time, y = frequency, fill = strain.name)) +
facet_grid(rnott ~ iter, scales = "free") +
geom_area(color = "black", size = .2, alpha = .4) + guides(fill = FALSE) +
geom_vline(data = time.max.samples.long, aes(xintercept = jitter(value, .15), color = type), size = 1.25, alpha = .85) +
scale_color_manual(values = c("darkorange1", "mediumblue", "purple", "black")) +
theme(strip.background = element_blank(),  strip.text.x = element_blank()) +
labs(x = "Time", y = "Frequency")
time.max.sample %>% gather(metric, value, 3:6) -> time.max.sample.long
head(time.max.sample.long)
time.max.sample %>% gather(metric, value, 4:6) -> time.max.sample.long
head(time.max.sample.long)
ci.pop.10000 <- ggplot2::ggplot(data = long.strains.sample, aes(x = time, y = frequency, fill = strain.name)) +
facet_grid(rnott ~ iter, scales = "free") +
geom_area(color = "black", size = .2, alpha = .4) + guides(fill = FALSE) +
geom_vline(data = time.max.sample.long, aes(xintercept = jitter(value, .15), color = type), size = 1.25, alpha = .85) +
scale_color_manual(values = c("darkorange1", "mediumblue", "purple", "black")) +
theme(strip.background = element_blank(),  strip.text.x = element_blank()) +
labs(x = "Time", y = "Frequency")
ci.pop.10000
ci.pop.10000 <- ggplot2::ggplot(data = long.strains.sample, aes(x = time, y = frequency, fill = strain.name)) +
facet_grid(rnott ~ iter, scales = "free") +
geom_area(color = "black", size = .2, alpha = .4) + guides(fill = FALSE) +
geom_vline(data = time.max.sample.long, aes(xintercept = jitter(value, .15), color = metric), size = 1.25, alpha = .85) +
#scale_color_manual(values = c("darkorange1", "mediumblue", "purple", "black")) +
theme(strip.background = element_blank(),  strip.text.x = element_blank()) +
labs(x = "Time", y = "Frequency")
ci.pop.1000 <- ggplot2::ggplot(data = long.strains.sample, aes(x = time, y = frequency, fill = strain.name)) +
facet_grid(rnott ~ iter, scales = "free") +
geom_area(color = "black", size = .2, alpha = .4) + guides(fill = FALSE) +
geom_vline(data = time.max.sample.long, aes(xintercept = jitter(value, .15), color = metric), size = 1.25, alpha = .85) +
#scale_color_manual(values = c("darkorange1", "mediumblue", "purple", "black")) +
theme(strip.background = element_blank(),  strip.text.x = element_blank()) +
labs(x = "Time", y = "Frequency")
ci.pop.1000
ci.pop.1000 <- ggplot2::ggplot(data = long.strains.sample, aes(x = time, y = frequency, fill = strain.name)) +
facet_grid(rnott ~ iter, scales = "free") +
geom_area(color = "black", size = .2, alpha = .4) + guides(fill = FALSE) +
geom_vline(data = time.max.sample.long, aes(xintercept = jitter(value, .15), color = metric), size = 1.25, alpha = .85) +
scale_color_manual(values = c("darkorange1", "mediumblue", "purple")) +
theme(strip.background = element_blank(),  strip.text.x = element_blank()) +
labs(x = "Time", y = "Frequency")
ci.pop.1000
View(time.max.sample.long)
View(time.max.sample)
ci.pop.1000 <- ggplot2::ggplot(data = long.strains.sample, aes(x = time, y = frequency, fill = strain.name)) +
facet_grid(rnott ~ iter) +
geom_area(color = "black", size = .2, alpha = .4) + guides(fill = FALSE) +
geom_vline(data = time.max.sample.long, aes(xintercept = jitter(value, .15), color = metric), size = 1.25, alpha = .85) +
scale_color_manual(values = c("darkorange1", "mediumblue", "purple")) +
theme(strip.background = element_blank(),  strip.text.x = element_blank()) +
labs(x = "Time", y = "Frequency")
ci.pop.1000
ci.pop.1000 <- ggplot2::ggplot(data = long.strains.sample, aes(x = time, y = frequency, fill = strain.name)) +
facet_grid(rnott ~ iter, scales = "free_x") +
geom_area(color = "black", size = .2, alpha = .4) + guides(fill = FALSE) +
geom_vline(data = time.max.sample.long, aes(xintercept = jitter(value, .15), color = metric), size = 1.25, alpha = .85) +
scale_color_manual(values = c("darkorange1", "mediumblue", "purple")) +
theme(strip.background = element_blank(),  strip.text.x = element_blank()) +
labs(x = "Time", y = "Frequency")
ci.pop.1000
ci.pop.1000 <- ggplot2::ggplot(data = long.strains.sample, aes(x = time, y = frequency, fill = strain.name)) +
facet_grid(rnott ~ iter) +
geom_area(color = "black", size = .2, alpha = .4) + guides(fill = FALSE) +
geom_vline(data = time.max.sample.long, aes(xintercept = jitter(value, .15), color = metric), size = 1.25, alpha = .85) +
scale_color_manual(values = c("darkorange1", "mediumblue", "purple")) +
theme(strip.background = element_blank(),  strip.text.x = element_blank()) +
labs(x = "Time", y = "Frequency")
ci.pop.1000
