summarize(avg.diversity = mean(diversity),
sd.diversity = sd(diversity),
avg.entropy = mean(entropy),
sd.entropy = sd(entropy)) -> trajectories.rnott
diversity.plot <- ggplot(trajectories.rnott, aes(x = day.time, y = avg.diversity)) +
geom_line(color = "purple") + geom_ribbon(aes(ymin = (avg.diversity-sd.diversity), ymax
= avg.diversity + sd.diversity),
color = "purple", alpha = .5)+
facet_wrap(~rnott, ncol = 1, scales = "free")
diversity.plot
diversity.plot <- ggplot(trajectories.rnott, aes(x = day.time, y = avg.diversity)) +
geom_line(color = "purple") + geom_ribbon(aes(ymin = (avg.diversity-sd.diversity), ymax
= avg.diversity + sd.diversity),
fill = "purple", alpha = .5)+
facet_wrap(~rnott, ncol = 1, scales = "free")
diversity.plot
entropy.plot <- ggplot(trajectories.rnott, aes(x = day.time, y = avg.entropy)) +
geom_line(color = "purple") + geom_ribbon(aes(ymin = (avg.entropy-sd.entropy), ymax
= avg.entropy + sd.entropy),
fill = "blue", alpha = .5)+
facet_wrap(~rnott, ncol = 1, scales = "free")
entropy.plot
entropy.plot <- ggplot(trajectories.rnott, aes(x = day.time, y = avg.entropy)) +
geom_line(color = "entropy") + geom_ribbon(aes(ymin = (avg.entropy-sd.entropy), ymax
= avg.entropy + sd.entropy),
fill = "blue", alpha = .5)+
facet_wrap(~rnott, ncol = 1, scales = "free")
combined <- plot_grid(ci.pop.rnott, diversity.plot, entropy.plot, nrow = 1)
combined <- plot_grid(ci.rnott, diversity.plot, entropy.plot, nrow = 1)
combined
entropy.plot
entropy.plot <- ggplot(trajectories.rnott, aes(x = day.time, y = avg.entropy)) +
geom_line(color = "blue") + geom_ribbon(aes(ymin = (avg.entropy-sd.entropy), ymax
= avg.entropy + sd.entropy),
fill = "blue", alpha = .5)+
facet_wrap(~rnott, ncol = 1, scales = "free")
entropy.plot
combined <- plot_grid(ci.rnott, diversity.plot, entropy.plot, nrow = 1)
save_plot(filename = paste0(fig_path, "combined.CIsmall.pdf"), combined, base_height = 8, base_aspect_ratio = 1.9)
combined
diversity.plot <- ggplot(trajectories.rnott, aes(x = day.time, y = avg.diversity)) +
geom_line(color = "purple") + geom_ribbon(aes(ymin = (avg.diversity-sd.diversity), ymax
= avg.diversity + sd.diversity),
fill = "purple", alpha = .5)+
facet_wrap(~rnott, ncol = 1, scales = "free")+
theme(strip.background = element_blank())
entropy.plot <- ggplot(trajectories.rnott, aes(x = day.time, y = avg.entropy)) +
geom_line(color = "blue") + geom_ribbon(aes(ymin = (avg.entropy-sd.entropy), ymax
= avg.entropy + sd.entropy),
fill = "blue", alpha = .5)+
facet_wrap(~rnott, ncol = 1, scales = "free")+
theme(strip.background = element_blank())
combined <- plot_grid(ci.rnott, diversity.plot, entropy.plot, nrow = 1)
save_plot(filename = paste0(fig_path, "combined.CIsmall.pdf"), combined, base_height = 8, base_aspect_ratio = 1.9)
fig_path
library(cowplot)
save_plot(filename = paste0(fig_path, "combined.CIsmall.pdf"), combined, base_height = 8, base_aspect_ratio = 1.9)
fig_path = "~Doc"
fig_path = "~/Documents/projects/viral_evolution/fig"
fig_path = "~/Documents/projects/viral_evolution/figs/"
save_plot(filename = paste0(fig_path, "combined.CIsmall.pdf"), combined, base_height = 8, base_aspect_ratio = 1.9)
if(grepl('laurencastro', Sys.info()['login'])) data_path <- "~/Documents/projects/viral_evolution/data/"
desired.rnott = seq(0.9, 1.9 .2)
file.list <- get_vec_of_files(dir_path = data_path, type = "trial", r0_seq, N)
file.list
desired.rnott
desired.rnott
desired.rnott
desired.rnott = seq(0.9, 1.9 .2)
desired.rnott = seq(0.9, 1.9 ,.2)
desired.rnott
file.list <- get_vec_of_files(dir_path = data_path, type = "trial", r0_seq, N)
file.list
file.list <- file.list[c(2,5,8,11)]
file.list
desired.rnott = c(0.95, seq(1.1, 1.9 ,.2))
file.list <- get_vec_of_files(dir_path = data_path, type = "trial", r0_seq, N)
file.list
desired.rnott = seq(0.9, 1.9 ,.2))
desired.rnott = seq(0.9, 1.9 ,.2)
desired.rnott
data_path
file.list <- get_vec_of_files(dir_path = data_path, type = "trial", r0_seq, N)
file.list
file.list <- get_vec_of_files(dir_path = data_path, type = "trial", desired.rnott, N)
file.list
file.list <- file.list[c(2,5,8,11, 14)]
file.list
file.list <- file.list[c(2,5,8,11, 14, 17)]
file.list
file.list <- get_vec_of_files(dir_path = data_path, type = "trial", desired.rnott, N)
file.list <- file.list[c(2,5,8,11, 14, 17)]
file.list
combos <- sort(apply(expand.grid(desired.rnott, N), 1, paste, collapse = "_", sep = ""))
data.files.trial <- data.frame(cbind(combos, file.list))
file.list <- get_vec_of_files(dir_path = data_path, type = "strain", desired.rnott, N)
file.list <- file.list[c(2,5,8,11, 14, 17)]
combos <- sort(apply(expand.grid(desired.rnott, N), 1, paste, collapse = "_", sep = ""))
data.files.strain <- data.frame(cbind(combos, file.list))
epidemic.trials <- alply(.data = data.files.trial, .margins = 1, function(x) {
load(as.character(x$file.list))
trial.params <- get_params(x)
epidemic.trials <- get_epidemic_index(time.records, trial.N = trial.params$pop.size, threshold.prev = .01,
threshold.prop = .01)
if (length(epidemic.trials) == 0) epidemic.trials <- 0
epidemic.trials <- cbind(trial.params, epidemic.trials)
return(epidemic.trials)
})
data.files.trial$epidemic.trials <- epidemic.trials
data.files <- left_join(data.files.trial, data.files.strain, by = "combos")
colnames(data.files) <- c("combos", "file.trial", "epidemic.index", "file.strain")
head(data.files)
trajectories <- adply(.data = data.files, .margins = 1,.id=NULL, .expand = F, function(x) {
load(as.character(x$file.trial))
trial.params <- get_params(x)
#epidemic.index <- x$epidemic.trials[[1]]$epidemic.trials
#if (epidemic.index[1] > 0) {
#time.records.a <- align_time_series_all(time.records = time.records[epidemic.index])
time.records.a <- align_time_series_all(time.records = time.records)
vI.trajectory <- combine_time_records(time.records.a)
vI.trajectory <- cbind(trial.params, vI.trajectory)
#vI.trajectory$iter = epidemic.index[vI.trajectory$iter]
return(vI.trajectory)
#}
})
unique(trajectories$rnott)
unique(trajectories$iter)
random.iter = sample(1:100, 6)
long.strains.absolute.master <- adply(.data = data.files,
.margins = 1,.id = NULL, .expand = FALSE, function(x) {
# first load the trajectories
load(as.character(x$file.trial))
trial.params <- get_params(x)
epidemic.index <- x$epidemic.index[[1]]$epidemic.trials
if (epidemic.index[1] > 0) {
time.records.a <- align_time_series_all(time.records = time.records[epidemic.index])
vI.trajectory <- combine_time_records(time.records.a)
vI.trajectory <- cbind(trial.params, vI.trajectory)
vI.trajectory$iter = epidemic.index[vI.trajectory$iter]
# Strain part
load(as.character(x$file.strain))
trial.params <- get_params(x)
long.strain.df <- adply(.data = epidemic.index, .margins = 1, function(x) {
long.strains.m <- long.strains(x, strain.records)
})
long.strain.df <- cbind(trial.params, long.strain.df)
head(long.strain.df)
strain.spread <- spread(long.strain.df, key = strain.name, value = frequency)
vI <- vI.trajectory$vI
select(strain.spread,  6:ncol(strain.spread)) * vI -> strain.absolute.infect
strain.absolute.infect <- cbind(strain.spread[,1:5], vI, strain.absolute.infect)
gather(strain.absolute.infect, strain.name,
num.infected, 7:ncol(strain.absolute.infect)) -> strain.absolute.long
return(strain.absolute.long)
}
})
sapply(c('analyze_saved_sims.R', 'plotting_functions.R'), source)
long.strains.absolute.master <- adply(.data = data.files,
.margins = 1,.id = NULL, .expand = FALSE, function(x) {
# first load the trajectories
load(as.character(x$file.trial))
trial.params <- get_params(x)
epidemic.index <- x$epidemic.index[[1]]$epidemic.trials
if (epidemic.index[1] > 0) {
time.records.a <- align_time_series_all(time.records = time.records[epidemic.index])
vI.trajectory <- combine_time_records(time.records.a)
vI.trajectory <- cbind(trial.params, vI.trajectory)
vI.trajectory$iter = epidemic.index[vI.trajectory$iter]
# Strain part
load(as.character(x$file.strain))
trial.params <- get_params(x)
long.strain.df <- adply(.data = epidemic.index, .margins = 1, function(x) {
long.strains.m <- long.strains(x, strain.records)
})
long.strain.df <- cbind(trial.params, long.strain.df)
head(long.strain.df)
strain.spread <- spread(long.strain.df, key = strain.name, value = frequency)
vI <- vI.trajectory$vI
select(strain.spread,  6:ncol(strain.spread)) * vI -> strain.absolute.infect
strain.absolute.infect <- cbind(strain.spread[,1:5], vI, strain.absolute.infect)
gather(strain.absolute.infect, strain.name,
num.infected, 7:ncol(strain.absolute.infect)) -> strain.absolute.long
return(strain.absolute.long)
}
})
long.strains.absolute.master %>%
filter(iter %in% random.iter) -> long.strains.absolute.sample
head(long.strains.absolute.sample)
ci.pop.1000 <- ggplot2::ggplot(data = long.strains.absolute.sample,
aes(x = time.day, y = num.infected, fill = strain.name)) +
facet_grid(rnott~iter) +
geom_area(color = "black", size = .2, alpha = .3) + guides(fill = FALSE) +
#geom_vline(data = time.max.sample, aes(xintercept = jitter(value, .25), color = metric), size = 1.25, alpha = .85) +
#scale_color_manual(values = c("black", "mediumblue", "purple"), guide = FALSE) +
#theme(strip.background = element_blank(),  strip.text.x = element_blank()) +
labs(x = "Time", y = "Num.Infected")+
theme(strip.background = element_blank())
ci.pop.1000
ci.pop.1000 <- ggplot2::ggplot(data = long.strains.absolute.sample,
aes(x = vtime, y = num.infected, fill = strain.name)) +
facet_grid(rnott~iter) +
geom_area(color = "black", size = .2, alpha = .3) + guides(fill = FALSE) +
#geom_vline(data = time.max.sample, aes(xintercept = jitter(value, .25), color = metric), size = 1.25, alpha = .85) +
#scale_color_manual(values = c("black", "mediumblue", "purple"), guide = FALSE) +
#theme(strip.background = element_blank(),  strip.text.x = element_blank()) +
labs(x = "Time", y = "Num.Infected")+
theme(strip.background = element_blank())
ci.pop.1000
save_plot(filename = paste0(fig_path, "ci.pop.1000.day.pdf"), ci.pop.1000, base_height = 8, base_aspect_ratio = 1.5)
sample = sample(1:100, 1)
long.strains.absolute.sample %>% filter(iter == sample) -> long.strains.absolute.onesample
head(long.strains.absolute.onesample)
sample
long.strains.absolute.master %>% filter(iter == sample) -> long.strains.absolute.onesample
head(long.strains.absolute.onesample)
trajectories %>%
mutate(day.time = shifted.time/10) %>%
group_by(rnott, day.time) %>%
summarize(avg.diversity = mean(diversity),
sd.diversity = sd(diversity),
avg.entropy = mean(entropy),
sd.entropy = sd(entropy)) -> trajectories.rnott
head(trajectories.rnott)
ci.rnott <- ggplot(data = long.strains.absolute.onesample,
aes(x = vtime, y = num.infected, fill = strain.name)) +
facet_wrap(~rnott, ncol = 1, scales = "free") +
geom_area(color = "black", size = .2, alpha = .3) + guides(fill = FALSE) +
labs(x = "Time", y = "Num.Infected")+
theme(strip.background = element_blank())
ci.rnott
head(trajectories.rnott)
trajectories %>%
#mutate(day.time = shifted.time/10) %>%
group_by(rnott, day.time) %>%
summarize(avg.diversity = mean(diversity),
sd.diversity = sd(diversity),
avg.entropy = mean(entropy),
sd.entropy = sd(entropy)) -> trajectories.rnott
trajectories %>%
#mutate(day.time = shifted.time/10) %>%
group_by(rnott, shifted.time) %>%
summarize(avg.diversity = mean(diversity),
sd.diversity = sd(diversity),
avg.entropy = mean(entropy),
sd.entropy = sd(entropy)) -> trajectories.rnott
head(trajectories.rnott)
trajectories <- adply(.data = data.files, .margins = 1,.id=NULL, .expand = F, function(x) {
load(as.character(x$file.list))
trial.params <- get_params(x)
epidemic.index <- x$epidemic.trials[[1]]$epidemic.trials
if (epidemic.index[1] > 0) {
time.records.a <- align_time_series_all(time.records = time.records[epidemic.index])
vI.trajectory <- combine_time_records(time.records.a)
vI.trajectory <- cbind(trial.params, vI.trajectory)
vI.trajectory$iter = epidemic.index[vI.trajectory$iter]
return(vI.trajectory)
}
})
trajectories <- adply(.data = data.files, .margins = 1,.id=NULL, .expand = F, function(x) {
load(as.character(x$file.trial))
trial.params <- get_params(x)
#epidemic.index <- x$epidemic.trials[[1]]$epidemic.trials
#if (epidemic.index[1] > 0) {
#time.records.a <- align_time_series_all(time.records = time.records[epidemic.index])
time.records.a <- align_time_series_all(time.records = time.records)
vI.trajectory <- combine_time_records(time.records.a)
vI.trajectory <- cbind(trial.params, vI.trajectory)
#vI.trajectory$iter = epidemic.index[vI.trajectory$iter]
return(vI.trajectory)
#}
})
head(trajectories)
trajectories %>% filter(iter %in% random.iter ) %>%
group_by(rnott, shifted.time)
summarize(avg.diversity = mean(diversity),
sd.diversity = sd(diversity),
avg.entropy = mean(entropy),
sd.entropy = sd(entropy)) -> trajectories.rnott
random.iter
trajectories %>% filter(iter %in% random.iter) %>%
group_by(rnott, shifted.time)
trajectories %>% filter(iter %in% random.iter) %>%
group_by(rnott, shifted.time)
summarize(avg.diversity = mean(diversity),
sd.diversity = sd(diversity),
avg.entropy = mean(entropy),
sd.entropy = sd(entropy))
trajectories %>% filter(iter %in% random.iter) %>%
group_by(rnott, shifted.time) %>%
summarize(avg.diversity = mean(diversity),
sd.diversity = sd(diversity),
avg.entropy = mean(entropy),
sd.entropy = sd(entropy)) -> trajectories.rnott
diversity.plot <- ggplot(trajectories.rnott, aes(x = shifted.time, y = avg.diversity)) +
geom_line(color = "purple") + geom_ribbon(aes(ymin = (avg.diversity-sd.diversity), ymax
= avg.diversity + sd.diversity),
fill = "purple", alpha = .5)+
facet_wrap(~rnott, ncol = 1, scales = "free")+
theme(strip.background = element_blank())
entropy.plot <- ggplot(trajectories.rnott, aes(x = shifted.time, y = avg.entropy)) +
geom_line(color = "blue") + geom_ribbon(aes(ymin = (avg.entropy-sd.entropy), ymax
= avg.entropy + sd.entropy),
fill = "blue", alpha = .5)+
facet_wrap(~rnott, ncol = 1, scales = "free")+
theme(strip.background = element_blank())
combined <- plot_grid(ci.rnott, diversity.plot, entropy.plot, nrow = 1)
save_plot(filename = paste0(fig_path, "combined.CIday3panel.pdf"), combined, base_height = 8, base_aspect_ratio = 1.9)
if(grepl('laurencastro', Sys.info()['login'])) data_path <- "~/Documents/projects/viral_evolution/data/smalltimestep/"
N = c(100, 1000, 10000)
r0_seq = c(seq(0.85, 1.25, .02))
file.list <- get_vec_of_files(dir_path = data_path, type = "trial", r0_seq, N)
combos <- sort(apply(expand.grid(r0_seq, N), 1, paste, collapse = "_", sep = ""))
data.files.trial <- data.frame(cbind(combos, file.list))
epidemic.trials <- set_epidemic_criteria(data.files.trial, threshold.prev = .001, threshold.prop = .001)
data.files.trial$epidemic.trials <- epidemic.trials
cum.strains.master <- adply(.data = data.files, .margins = 1, .id=NULL, .expand = F, function(x) {
load(as.character(x$file.list))
trial.params <- get_params(x)
epidemic.index <- x$epidemic.trials[[1]]$epidemic.trials
if (epidemic.index[1] > 0) {
time.records.a <- align_time_series_all(time.records[epidemic.index])
cum.strains.trial = combine_mutations(time.records = time.records.a)
cum.strains.trial = cbind(trial.params, cum.strains.trial)
return(cum.strains.trial)
}
})
data.files
cum.strains.master <- adply(.data = data.files.trial, .margins = 1, .id=NULL, .expand = F, function(x) {
load(as.character(x$file.list))
trial.params <- get_params(x)
epidemic.index <- x$epidemic.trials[[1]]$epidemic.trials
if (epidemic.index[1] > 0) {
time.records.a <- align_time_series_all(time.records[epidemic.index])
cum.strains.trial = combine_mutations(time.records = time.records.a)
cum.strains.trial = cbind(trial.params, cum.strains.trial)
return(cum.strains.trial)
}
})
head(cum.strains.master)
View(cum.strains.master)
ggplot(cum.strains.master, aes(x= shifted.time, y = cum.strains))+geom_line()+
facet_grid(rnott~pop.size)
desired.rnott
desired.rnott = seq(0.85, 1.25, .04)
desired.rnott
desired.rnott = seq(0.85, 1.25, .08)
cum.strains.master %>% group_by(rnott, pop.size, shifted.time) %>%
filter(rnott %in% desired.rnott) %>%
summarise(avg.strains = mean(cum.strains),
sd.strains = sd(cum.strains))  %>%
filter(rnott %in% desired.rnotts) -> cum.strains.avg
cum.strains.master %>% group_by(rnott, pop.size, shifted.time) %>%
summarise(avg.strains = mean(cum.strains),
sd.strains = sd(cum.strains))  %>%
filter(rnott %in% desired.rnott)  -> cum.strains.avg
ggplot(cum.strains.avg, aes(x= shifted.time, y = avg.strains))+geom_line()+
facet_grid(rnott~pop.size)
cum.strains.master %>% group_by(rnott, pop.size, shifted.time) %>%
summarise(avg.strains = mean(cum.strains),
sd.strains = sd(cum.strains))  %>%
filter(rnott %in% desired.rnott)  %>%
mutate(time.day = shifted.time/10) -> cum.strains.avg
ggplot(cum.strains.avg, aes(x= time.day, y = avg.strains))+geom_line()+
facet_grid(rnott~pop.size)+
geom_ribbon(aes(ymin = (avg.strains-sd.strians), ymax = (avg.strains+sd.strains), alpha = .5))
ggplot(cum.strains.avg, aes(x= time.day, y = avg.strains))+geom_line()+
facet_grid(rnott~pop.size)+
geom_ribbon(aes(ymin = (avg.strains-sd.strains), ymax = (avg.strains+sd.strains), alpha = .5))
ggplot(cum.strains.avg, aes(x= time.day, y = avg.strains))+geom_line()+
facet_grid(rnott~pop.size, scales = "free")+
geom_ribbon(aes(ymin = (avg.strains-sd.strains),
ymax = (avg.strains+sd.strains)), alpha = .5)
ggplot(cum.strains.avg, aes(x= time.day, y = avg.strains))+geom_line()+
facet_grid(pop.size~rnott, scales = "free")+
geom_ribbon(aes(ymin = (avg.strains-sd.strains),
ymax = (avg.strains+sd.strains)), alpha = .5)
ggplot(cum.strains.avg, aes(x= time.day, y = avg.strains))+geom_line()+
facet_grid(pop.size~rnott, scales = "free")+
geom_ribbon(aes(ymin = (avg.strains-sd.strains),
ymax = (avg.strains+sd.strains)), alpha = .5)+
theme(strip.background = element_blank())
ggplot(cum.strains.avg, aes(x= time.day, y = avg.strains))+geom_line()+
facet_grid(pop.size~rnott, scales = "free")+
geom_ribbon(aes(ymin = (avg.strains-sd.strains),
ymax = (avg.strains+sd.strains)), alpha = .5)+
theme(strip.background = element_blank()) +
labs(x = "Time (Days)", y = "Cumulative Strains")
cumulative.strains <- ggplot(cum.strains.avg, aes(x= time.day, y = avg.strains))+geom_line()+
facet_grid(pop.size~rnott, scales = "free")+
geom_ribbon(aes(ymin = (avg.strains-sd.strains),
ymax = (avg.strains+sd.strains)), alpha = .5)+
theme(strip.background = element_blank()) +
labs(x = "Time (Days)", y = "Cumulative Strains")
fig_path
save_plot(paste0(fig_path, "cumulative.strains.smallts.pdf"), cumulative.strains, base_height = 8, base_aspect_ratio = 1.3)
max.metrics.master <-  adply(.data = data.files, .margins = 1, .id=NULL, .expand = F,function(x) {
load(as.character(x$file.list))
trial.params <- get_params(x)
epidemic.index <- x$epidemic.trials[[1]]$epidemic.trials
genetic.metrics <- get_max_genetic_metrics(time.records = time.records[epidemic.index], rnott = trial.params$rnott)
genetic.metrics <-  cbind(rep(trial.params$pop.size, nrow(genetic.metrics)), genetic.metrics)
colnames(genetic.metrics)[1] <- "pop.size"
return(genetic.metrics)
})
max.metrics.master <-  adply(.data = data.files.trial, .margins = 1, .id=NULL, .expand = F,function(x) {
load(as.character(x$file.list))
trial.params <- get_params(x)
epidemic.index <- x$epidemic.trials[[1]]$epidemic.trials
genetic.metrics <- get_max_genetic_metrics(time.records = time.records[epidemic.index], rnott = trial.params$rnott)
genetic.metrics <-  cbind(rep(trial.params$pop.size, nrow(genetic.metrics)), genetic.metrics)
colnames(genetic.metrics)[1] <- "pop.size"
return(genetic.metrics)
})
max.metrics.m <- melt(data = max.metrics.master, id.vars = c("rnott", "pop.size"),
measure.vars = c("max.entropy", "max.diversity"))
colnames(max.metrics.m) <- c("rnott", "pop.size", "type", "value")
max.metrics.m <- melt(data = max.metrics.master, id.vars = c("rnott", "pop.size"),
measure.vars = c("max.entropy", "max.diversity"))
colnames(max.metrics.m) <- c("rnott", "pop.size", "type", "value")
max.metric.plot <- ggplot(max.metrics.m, aes(factor(rnott), value)) +
facet_grid(type~pop.size, scales = "free_y") +
geom_boxplot()+
labs(x = expression("R"[0]), y = "Distance")
max.metric.plot
max.metrics.m %>% filter(rnott %in% desired.rnott) %>%
ggplot(aes(factor(rnott), value)) +
facet_grid(type~pop.size, scales = "free_y") +
geom_boxplot() +
labs(x = expression("R"[0]), y = "Distance") +
theme(strip.background = element_blank())
max.metrics.m %>% filter(rnott %in% desired.rnott) %>%
ggplot(aes(factor(rnott), value)) +
facet_grid(type~pop.size, scales = "free_y") +
geom_boxplot() +
labs(x = expression("R"[0]), y = "Distance") +
theme(strip.background = element_blank()) -> max.metric.plot
save_plot(paste0(fig_path, "max.metric.small.time.pdf"), max.metric.plot, base_height = 8, base_aspect_ratio = 1.2)
max.infect.metrics.master <-  adply(.data = data.files, .margins = 1, .id=NULL, .expand = F,function(x) {
load(as.character(x$file.list))
trial.params <- get_params(x)
epidemic.index <- x$epidemic.trials[[1]]$epidemic.trials
time.records.a <- align_time_series_all(time.records[epidemic.index])
metrics <- metrics_at_max_infect(time.records = time.records.a)
metrics <-  cbind(rep(trial.params, nrow(metrics)), metrics)
return(metrics)
})
max.infect.metrics.master <-  adply(.data = data.files.trial, .margins = 1, .id=NULL, .expand = F,function(x) {
load(as.character(x$file.list))
trial.params <- get_params(x)
epidemic.index <- x$epidemic.trials[[1]]$epidemic.trials
time.records.a <- align_time_series_all(time.records[epidemic.index])
metrics <- metrics_at_max_infect(time.records = time.records.a)
metrics <-  cbind(rep(trial.params, nrow(metrics)), metrics)
return(metrics)
})
entropy.at.max <- plot.metric.at.maxinfect(max.infect.metrics.master,
desired.rnotts = r0_seq, desired.metric = "entropy")
entropy.at.max
max.infect.metrics.master %>% filter(rnott %in% desired.rnott) ->max.infect.metrics.sample
entropy.at.max <- plot.metric.at.maxinfect(max.infect.metrics.sample,
desired.rnotts = desired.rnott, desired.metric = "entropy")
entropy.at.max
diversity.at.max <- plot.metric.at.maxinfect(max.infect.metrics.sample,
desired.rnotts = desired.rnott, desired.metric = "diversity")
diversity.at.max
metrics.at.max.infect = plot_grid(entropy.at.max, diversity.at.max, nrow = 2)
metrics.at.max.infect
save_plot(filename = paste0(fig_path, 'metrics.at.max.infect.smallts.pdf'),
metrics.at.max.infect, base_height = 8, base_aspect_ratio = 1.5)
epi_mut_params <- function(N = 1000,
I_0 = .01*N,
S_0 = N-I_0,
delta_t = 1,
tbeg = 1,
tend = 250,
gamma = 1/3,
R0 = 1.5,
beta = R0*gamma,
contact.per.day = 4,
seq_len = 100,
alphabet = c(1, 2, 3, 4),
year_mut_rate = 1.8*10^-2, #1.8*10^-3
mut_rate = year_mut_rate / (365 / delta_t)) #per site per day per delta t)
return(as.list(environment()))
nrealisations = 50
if(grepl('laurencastro', Sys.info()['login'])) data_path <- "~/Documents/projects/viral_evolution/data/"
r0_seq = c(seq(0.95, 4, .5))
for (size in 1:length(N)) {
for (r0 in 1:length(r0_seq)) {
trial <- run_mutate_branches_inc(num_reps = nrealisations,
params = epi_mut_params(N = N[size], R0 = r0_seq[r0], delta_t = .1, tend=250))
filename.time <- paste0(data_path, "smalltimestep/trial/trial_rnott", r0_seq[r0], "_N", N[size])
time.records <- time_records_all(trial)
save(time.records, file = paste0(filename.time, ".RData"))
filename.strain <- paste0(data_path,"smalltimestep/strain/strain_rnott", r0_seq[r0], "_N", N[size])
strain.records <- strain_freq_all(trial)
save(strain.records, file = paste0(filename.strain, ".RData"))
}
}
r0_seq = c(0.95, seq( 1, 4, .5))
for (size in 1:length(N)) {
for (r0 in 1:length(r0_seq)) {
trial <- run_mutate_branches_inc(num_reps = nrealisations,
params = epi_mut_params(N = N[size], R0 = r0_seq[r0], delta_t = .1, tend=250))
filename.time <- paste0(data_path, "smalltimestep/trial/trial_rnott", r0_seq[r0], "_N", N[size])
time.records <- time_records_all(trial)
save(time.records, file = paste0(filename.time, ".RData"))
filename.strain <- paste0(data_path,"smalltimestep/strain/strain_rnott", r0_seq[r0], "_N", N[size])
strain.records <- strain_freq_all(trial)
save(strain.records, file = paste0(filename.strain, ".RData"))
}
}
